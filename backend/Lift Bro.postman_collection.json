{
	"info": {
		"_postman_id": "484752bd-d0ce-4236-882a-087999b12f9f",
		"name": "Lift Bro",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bao\",\r\n    \"name\": \"bao\",\r\n    \"password\": \"password\",\r\n    \"dob\": \"2023-05-28T10:30:00+08:00\",\r\n    \"phoneNo\": \"999\",\r\n    \"email\": \"baotest@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/newUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"newUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"jwtToken\", jsonData.cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bao\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.environment.set(\"jwtToken\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bao\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"jwtToken\", jsonData.cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bao\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/bao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"bao"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"bao shin\",\r\n    \"password\": \"password\",\r\n    \"dob\": \"2023-05-28T10:30:00Z\",\r\n    \"phoneNo\": \"999\",\r\n    \"email\": \"baotest@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/bao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"bao"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/bao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"bao"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise",
			"item": [
				{
					"name": "New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bao\",\r\n    \"name\": \"bao\",\r\n    \"password\": \"password\",\r\n    \"dob\": \"2023-05-28T10:30:00+08:00\",\r\n    \"phoneNo\": \"999\",\r\n    \"email\": \"baotest@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/newUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"newUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"jwtToken\", jsonData.cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bao\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Exercise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jackhammer Pushdown\",\r\n    \"description\": \"description\",\r\n    \"difficulty\": \"INT\",\r\n    \"defaultRep\": \"MED\",\r\n    \"caloriesPerMin\": 8,\r\n    \"muscleGroups\": [\r\n        {\r\n            \"name\": \"MIDCHEST\"\r\n        },\r\n        {\r\n            \"name\": \"TRICEPS\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/exercise/new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exercise",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Exercises",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/exercise",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exercise"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Exercise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/exercise/Jackhammer Pushdown",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exercise",
								"Jackhammer Pushdown"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Exercise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jackhammer Pushdown\",\r\n    \"description\": \"This exercise hits the lowerchest\",\r\n    \"muscleGroups\": [\r\n        {\r\n            \"name\": \"TRICEPS\"\r\n        },\r\n        {\r\n            \"name\": \"LOWERCHEST\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/exercise/Jackhammer Pushdown",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exercise",
								"Jackhammer Pushdown"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Exercise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/exercise/Jackhammer Pushdown",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exercise",
								"Jackhammer Pushdown"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Routine",
			"item": [
				{
					"name": "Create Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Bao Test\",\r\n  \"createdBy\": {\r\n    \"username\": \"bao\"\r\n  },\r\n  \"exercises\": [\r\n    {\r\n      \"name\": \"Deadlifts\",\r\n      \"targetReps\": [8, 10, 12],\r\n      \"repBuffer\": 2\r\n    },\r\n    {\r\n      \"name\": \"Barbell Squats\",\r\n      \"targetReps\": [6, 8, 10],\r\n      \"repBuffer\": 3\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"LEGS\"\r\n    },\r\n    {\r\n      \"name\": \"GLUTES\"\r\n    }\r\n  ],\r\n  \"image\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/routine/new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Routines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/routine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/routine/find?username=LiftBro&name=Liftbro's Full Body Routine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine",
								"find"
							],
							"query": [
								{
									"key": "username",
									"value": "LiftBro"
								},
								{
									"key": "name",
									"value": "Liftbro's Full Body Routine"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Routines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/routine/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine",
								"templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User's Routines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/routine/user/bao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine",
								"user",
								"bao"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Bao Test\",\r\n  \"exercises\": [\r\n    {\r\n      \"name\": \"Deadlifts\",\r\n      \"targetReps\": [8, 10, 12],\r\n      \"repBuffer\": 5\r\n    },\r\n    {\r\n      \"name\": \"Barbell Bench Press\",\r\n      \"targetReps\": [6, 8, 10],\r\n      \"repBuffer\": 5\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"LEGS\"\r\n    },\r\n    {\r\n      \"name\": \"UPPERBODY\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/routine/?username=Bao&name=Bao Test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "Bao"
								},
								{
									"key": "name",
									"value": "Bao Test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/routine/?username=bao&name=Bao Test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"routine",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "bao"
								},
								{
									"key": "name",
									"value": "Bao Test"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwtToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Completed Routine",
			"item": [
				{
					"name": "Create Completed Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"completedRoutineId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"liftBro\",\r\n  \"routineName\": \"Liftbro's Full Body Routine\",\r\n  \"dateTimeCompleted\": \"2023-07-04T10:30:00+08:00\",\r\n  \"routineDuration\": \"1:30:00\",\r\n  \"routineIntensity\": 4,\r\n  \"completedExercises\": [\r\n    {\r\n      \"exerciseName\": \"Deadlifts\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [100, 100, 100, 100],\r\n      \"actualReps\": [10, 8, 9, 10],\r\n      \"actualWeights\": [100, 100, 100, 100]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Barbell Bench Press\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Pull Ups\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Barbell Squats\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Miltary Press\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Barbell Rows (Upper Back)\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/completedRoutine/new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Completed Routines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"completedRoutineId\", jsonData.data[0].id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/completedRoutine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Completed Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/completedRoutine/{{completedRoutineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine",
								"{{completedRoutineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User's Completed Routines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"completedRoutineId\", jsonData.data[0].id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/completedRoutine/user/LiftBro",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine",
								"user",
								"LiftBro"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Completed Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"liftBro\",\r\n  \"routineName\": \"Liftbro's Full Body Routine\",\r\n  \"dateTimeCompleted\": \"2023-07-04T10:30:00+08:00\",\r\n  \"routineDuration\": \"1:30:00\",\r\n  \"routineIntensity\": 4,\r\n  \"caloriesBurned\": 200,\r\n  \"completedExercises\": [\r\n    {\r\n      \"exerciseName\": \"Deadlifts\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [200, 100, 100, 100],\r\n      \"actualReps\": [10, 8, 9, 10],\r\n      \"actualWeights\": [100, 100, 100, 100]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Barbell Bench Press\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Pull Ups\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Barbell Squats\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Miltary Press\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    },\r\n    {\r\n      \"exerciseName\": \"Barbell Rows (Upper Back)\",\r\n      \"targetReps\": [10, 10, 10, 10],\r\n      \"targetWeights\": [10, 10, 10, 10],\r\n      \"actualReps\": [10, 10, 10, 10],\r\n      \"actualWeights\": [10, 10, 10, 10]\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/completedRoutine/{{completedRoutineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine",
								"{{completedRoutineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Completed Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/completedRoutine/{{completedRoutineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine",
								"{{completedRoutineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Past Week Routine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/completedRoutine/pastWeek?weekOffset=1&username=bao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"completedRoutine",
								"pastWeek"
							],
							"query": [
								{
									"key": "weekOffset",
									"value": "1"
								},
								{
									"key": "username",
									"value": "bao"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/bao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"bao"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwtToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}